---
import roundoff from '../../utils/roundoff'

interface Props {
	artistName: string;
    artistCoverImage: string;
    artistDescription: string;
	monthlyPlays: number;
	artistSpotifyProfile: string;
}

const { artistName, artistCoverImage, artistDescription, monthlyPlays, artistSpotifyProfile } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Rethink+Sans:ital,wght@0,400;0,500;0,600;0,700;0,800;1,400;1,500;1,600;1,700;1,800&display=swap" rel="stylesheet">
		<title>{artistName} | ArtistDB</title>
	</head>
	<body>
        <header class="header-structure">
			<div class="content">
				<a href="/" style="margin-bottom: 0.5em; color: #fffffc; text-decoration: none; font-size: 1.5rem;">Artist<strong>DB</strong></a>
				<h1>{artistName}</h1>
				<p>{artistDescription}</p>
				<div class="status">
					<span class="monthly-plays">{roundoff(monthlyPlays, 2)} monthly plays</span>
					<span>&bull;</span>
					<a href={artistSpotifyProfile}>
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: currentColor;"><path d="M12.01 2.019c-5.495 0-9.991 4.496-9.991 9.991 0 5.494 4.496 9.99 9.991 9.99 5.494 0 9.99-4.496 9.99-9.99 0-5.495-4.446-9.991-9.99-9.991zm4.595 14.436c-.199.299-.549.4-.85.201-2.349-1.45-5.296-1.75-8.793-.951-.348.102-.648-.148-.748-.449-.101-.35.149-.648.45-.749 3.795-.85 7.093-.499 9.69 1.1.35.149.4.548.251.848zm1.2-2.747c-.251.349-.7.499-1.051.249-2.697-1.646-6.792-2.148-9.939-1.148-.398.101-.85-.1-.949-.498-.101-.402.1-.852.499-.952 3.646-1.098 8.143-.548 11.239 1.351.3.149.45.648.201.998zm.099-2.799c-3.197-1.897-8.542-2.097-11.59-1.146a.938.938 0 0 1-1.148-.6.937.937 0 0 1 .599-1.151c3.547-1.049 9.392-.85 13.089 1.351.449.249.599.849.349 1.298-.25.35-.849.498-1.299.248z"></path></svg>
						<span class="desktop-only">View Artist on Spotify</span>
					</a>
				</div>
			</div>
        </header>
		<slot />
	</body>
</html>
<style is:global define:vars={{ artistCoverImage }}>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	*, *::before, *::after {
		padding: 0;
		margin: 0;
		box-sizing: border-box;
	}
	html {
		font-family: 'Rethink Sans', system-ui, sans-serif;
		background: #13151a;
		background-size: 224px;
		color: #fff;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}

	.header-structure .content {
        display: flex;
        justify-content: center;
        flex-direction: column;
		background-image: linear-gradient(90deg, #222, transparent);
        padding: 1.25em 1em;
		min-height: 30vh; 
	}

    .header-structure {
        min-height: fit-content;
        min-height: 30vh;
        background: var(--artistCoverImage);
        background-size: cover;
        background-position: center;
    }

	.status {
		display: flex;
		align-items: center;
		gap: 0.25em;
		margin-top: 0.75em;
	}

	.status a {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 0.15em;
		text-decoration: none;
		color: #fffffc
	}


		.status a .desktop-only {
			display: block;
			visibility: visible;
			opacity: 1;
		}

    @media only screen and (max-width: 640px) {
		.status a .desktop-only {
			display: none;
			visibility: none;
			opacity: 0;
		}
    }
</style>

